@page "/"
@using WarmupGen.Core

<PageTitle>Generate Warmup</PageTitle>

<h1>Warmup</h1>

<EditForm Model="@CurrentWarmup">

	<button class="btn btn-primary mb-4" @onclick="() => CurrentWarmup.AddSegment()"><span class="oi oi-plus" aria-hidden="true"></span></button>

	<table class="table table-striped">
		<thead>
			<tr>
				<th scope="col">Exercise</th>
				<th></th>
				<th scope="col">Target/Technique</th>
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>

			@foreach (var segment in CurrentWarmup.Segments)
			{
				<tr>

					<td>@segment.Exercise.Name</td>

					<td>
						<button class="btn btn-primary mb-4" @onclick="() => CurrentWarmup.Reroll(segment)"><span class="oi oi-reload" aria-hidden="true"></span></button>
					</td>

					<td>
						<table class="table table-borderless text-nowrap">
							<tr>
								<td>
									<span>Target: @Display(segment.Target)</span>
								</td>
							</tr>
							<tr>
								<td>
									<span>Technique: @Display(segment.Technique)</span>
								</td>
							</tr>
						</table>

					</td>

					<td>
						<button class="btn btn-primary mb-4" @onclick="() => EditCriteria(segment)"><span class="oi oi-pencil" aria-hidden="true"></span></button>
					</td>

					<td>
						<button class="btn btn-primary mb-4" @onclick="() => CurrentWarmup.Remove(segment)"><span class="oi oi-trash" aria-hidden="true"></span></button>
					</td>

				</tr>
			}
		</tbody>
	</table>
</EditForm>

@code {
	const int defaultSegmentCount = 5;
	private Warmup? _warmup;

	Warmup CurrentWarmup
	{
		get
		{
			if (_warmup is null)
			{
				_warmup = Generator.GenerateWarmup(defaultSegmentCount);
			}
			return _warmup;
		}
	}

	[CascadingParameter] public IModalService Modal { get; set; } = default!;

	async Task EditCriteria(Segment segment)
	{
		var parameters = new ModalParameters().Add(nameof(Segment), segment);
		var form = Modal.Show<Criteria>(parameters);
		await form.Result;
		StateHasChanged();
	}

	string Display(string? s)
	{
		return s ?? "Any";
	}
}
